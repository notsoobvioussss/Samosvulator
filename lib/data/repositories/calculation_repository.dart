import 'package:internet_connection_checker/internet_connection_checker.dart';
import 'package:shared_preferences/shared_preferences.dart';

import '../datasources/calculations_local_data_source.dart';
import '../datasources/calculations_remote_data_source.dart';
import '../models/calculation_model.dart';

class CalculationRepository {
  final CalculationsLocalDataSource localDataSource;
  final CalculationsRemoteDataSource remoteDataSource;

  CalculationRepository({
    required this.localDataSource,
    required this.remoteDataSource,
  });

  /// üîπ –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Future<String?> _getToken() async {
    final prefs = await SharedPreferences.getInstance();
    final token = prefs.getString("token");
    print("üîë –ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω: $token");
    return token;
  }

  /// üîπ –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Future<int?> _getUserId() async {
    final prefs = await SharedPreferences.getInstance();
    final userId = prefs.getInt("user_id");
    print("üÜî –ü–æ–ª—É—á–µ–Ω–Ω—ã–π user_id: $userId");
    return userId;
  }

  /// üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ + —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  Future<List<CalculationModel>> getCalculations() async {
    print("üì• –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...");

    final localData = await localDataSource.getCalculations();
    print("üìå –õ–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ${localData.length} –∑–∞–ø–∏—Å–µ–π");

    final userId = await _getUserId();
    final token = await _getToken();

    if (userId == null || token == null) {
      print("‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å user_id –∏–ª–∏ —Ç–æ–∫–µ–Ω, —Ä–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏");
      return localData;
    }

    if (await InternetConnectionChecker().hasConnection) {
      print("üåç –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω, –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞...");
      try {
        final serverData = await remoteDataSource.getCalculations(userId, token);
        print("‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${serverData.length} –∑–∞–ø–∏—Å–µ–π —Å —Å–µ—Ä–≤–µ—Ä–∞");

        // üîπ –î–æ–±–∞–≤–ª—è–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ **—Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ** –¥–∞–Ω–Ω—ã–µ
        final newServerData = serverData.where((serverCalc) =>
        !localData.any((localCalc) => localCalc.id == serverCalc.id)).toList();

        if (newServerData.isNotEmpty) {
          print("üì• –î–æ–±–∞–≤–ª—è–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ ${newServerData.length} –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π");
          await localDataSource.saveCalculations(newServerData);
        } else {
          print("‚úÖ –í—Å–µ –∑–∞–ø–∏—Å–∏ —É–∂–µ –µ—Å—Ç—å –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ");
        }

        return [...localData, ...newServerData];
      } catch (e) {
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞: $e");
        return localData;
      }
    } else {
      print("üö´ –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞, –∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ");
      return localData;
    }
  }

  /// üîπ –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—á—ë—Ç (–ª–æ–∫–∞–ª—å–Ω–æ + —Å–µ—Ä–≤–µ—Ä)
  Future<void> addCalculation(CalculationModel calculation) async {
    print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Ä–∞—Å—á—ë—Ç: ${calculation.id}");

    final token = await _getToken();

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ
    await localDataSource.saveCalculation(calculation);
    print("‚úÖ –†–∞—Å—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ");

    // –ï—Å–ª–∏ –µ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç ‚Üí –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    if (token != null && await InternetConnectionChecker().hasConnection) {
      try {
        await remoteDataSource.uploadCalculation(calculation, token);
        print("‚úÖ –†–∞—Å—á—ë—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä");
      } catch (e) {
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä: $e");
      }
    } else {
      print("üö´ –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞, —Ä–∞—Å—á—ë—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏");
    }
  }

  /// üîπ **–î–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö**
  Future<void> syncCalculations() async {
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö...");

    final userId = await _getUserId();
    final token = await _getToken();

    if (userId == null || token == null) {
      print("‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å user_id –∏–ª–∏ —Ç–æ–∫–µ–Ω, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞");
      return;
    }

    if (await InternetConnectionChecker().hasConnection) {
      print("üåç –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ...");

      final localData = await localDataSource.getCalculations();
      final serverData = await remoteDataSource.getCalculations(userId, token);

      print("üìå –õ–æ–∫–∞–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: ${localData.length}");
      print("üìå –ó–∞–ø–∏—Å–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: ${serverData.length}");

      // üîπ 1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º **—Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ** –¥–∞–Ω–Ω—ã–µ —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      final localToSend = localData.where((localCalc) =>
      !serverData.any((serverCalc) => serverCalc.id == localCalc.id)).toList();
      if (localToSend.isNotEmpty) {
        print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ${localToSend.length} –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä...");
        for (var calculation in localToSend) {
          await remoteDataSource.uploadCalculation(calculation, token);
        }
        print("‚úÖ –í—Å–µ –Ω–æ–≤—ã–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä");
      } else {
        print("‚úÖ –í—Å–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —É–∂–µ –µ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ");
      }

      // üîπ 2. –ó–∞–≥—Ä—É–∂–∞–µ–º **—Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ** –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
      final newServerData = serverData.where((serverCalc) =>
      !localData.any((localCalc) => localCalc.id == serverCalc.id)).toList();
      if (newServerData.isNotEmpty) {
        print("üì• –î–æ–±–∞–≤–ª—è–µ–º ${newServerData.length} –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ —Å–µ—Ä–≤–µ—Ä–∞ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ");
        await localDataSource.saveCalculations(newServerData);
      } else {
        print("‚úÖ –í—Å–µ —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —É–∂–µ –µ—Å—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ");
      }
    } else {
      print("üö´ –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞");
    }
  }
}